=== Output data formats

Data is written to rasters, csv files, or geojson file. 

* The rasters are all in ENVI `bil` format, which you can read about in the section: <<Preparing your data>>. 
+
IMPORTANT: ENVI bil should not be mistaken for ESRI bil. Make sure you are using ENVI bil format. 
+
* The **csv** files are comma separated value files which can be read by spreadsheets and GIS software. 
** If you import csv files into a GIS you need to tell the GIS about the coordinate system.  
** Our csv files all have labeled columns so their contents can be easily views. 
** Almost all of our csv files contain **latitude** and **longitude** columns. These columns are projected into the **WGS84** coordinate system for ease of plotting in GIS software. Select this coordinate system when you loa the csv file into your GIS. For reference it has the http://spatialreference.org/ref/epsg/wgs-84/[EPSG code 4326]. 
+
* It is very annoying to have to click buttons in a GIS to select a coordinate system each time you look at csv data, so we also allow you to convert to http://geojson.org/[geojson] format by using the flag `convert_csv_to_geojson` in the parameter file. 
** The advantage of these files is that they have georeferencing, so you can load them directly into a GIS or web mapping software. 
** The disadvantage is that they are *HUGE* compared to csv files (usually more than 10x the file size). If you are working within GIS software or using web mapping (e.g., https://d3js.org/[d3.js] or http://leafletjs.com/[leaflet]) you will probably want to generate these files but if you are using our python plotting tools you can probably forgo creating them.

=== The different outputs and how to get them

To get the various outputs, you need to tell the *chi mapping tool* using the parameter file. These tables tell you what flags to use and what data you will get. 

==== Raster output

[cols="1,1,2", options="header"]
.These are basic rasters that don't require chi analysis.
|===

|parameter file switch
|Filename contains
|Description

|write hillshade: true
|*_hs.bil*
|This prints a hillshade raster. Seems to give better results than hillshade functions in GIS software. Also much faster. Much of our plotting tools make nice looking maps when you drape hillshade over elevation data so we suggest you turn this on the first time you analyse a landscape. 

|print_fill_raster: true
|*_fill.bil*
|This prints the fill raster. Filling is computationally expensive so you can do this the first time you run a DEM and then use the `raster_is_filled` flag later to speed up computation. 


|===


