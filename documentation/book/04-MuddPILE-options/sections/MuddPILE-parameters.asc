=== The parameter file

The parameter file has keywords followed by a value. Like this:

[source,paramfile]
---
a_boolean_key: true
a_string_key: super
an_integer_key: 42
a_float_key: 3.1415
----

We list all the possible keys below. All keys have a default value so if you forget to add a key MuddPILE will still run using default values. We have adopted the convention of giving these parameter files the extension `.driver`.

NOTE: The parameter file has a specific format, but the filename can be anything you want. We tend to use the extensions `.param` and `.driver` for these files, but you could use the extension `.MyDogSpot` if that tickled your fancy.

The parameter file has keywords followed by the `:` character. After that there is a space and the value. *There must be a `:` followed by a space or the key will not be read!` 

.MuddPILE parameter file format
************************************************
. Lines beginning with `#` are comments.
. Keywords or phrases are followed by a colon (`:`).
. The order of the keywords do not matter.
. Keywords are not sensitive, but must match expected keywords.
. If a keyword is not found, a default value is assigned.
************************************************


=== Parameter file options

Below are options for the parameter files. 


==== Basic file input and output

[cols="1,1,2", options="header"]
.File input and output options. **These do not have defaults and MUST be declared**.
|===
|Keyword
|Input type
|Description

|write path
|string
|The path to which data is written. **The code will NOT create a path: you need to make the write path before you start running the program.**

|read path
|string
|The path from which data is read.

|write fname
|string
|The prefix of rasters to be written *without extension*.
For example if this is `Test` and you have selected `bil` format then a fill operation will result in a file called `Test_Fill.bil`.

|read fname
|string
|The filename of the raster to be read without extension. For example if the raster is `MyRaster.bil`, read fname will be `MyRaster`. *In MuddPILE rasters are only read if the `read_initial_raster` key is test to `true`.* 

|===

=== Important default settings that you cannot change

Our boundary conditions are theoretically flexible if you dig into the pass:[c++] code but in the *MuddPILEdriver* you can only have fixed elevation North and South boundaries and a periodic E-W boundary. A periodic boundary is one where the boundary wraps to the opposite side (i.e., in our models the computer thinks the East side of the domain is right next to the West side).

If you don't read a raster, the model prints rasters in _MuddPILE Atlantis_, a mythical kingdom that is located in the Pacific Ocean. Basically we set the UTM zone to 1 and have the corner at 0 easting and 0 northing, i.e. on the equator. 

==== Parameters for intiating the model domain

[cols="1,1,1,2", options="header"]
.Parameters for intiating the model domain. These are used if `read_initial_raster: false`, which is the default.
|===
|Keyword
|Input type
|Default value
|Description


|NRows
|int
|0
|Number of rows in the model. 

|NCols
|int
|0
|Number of columns in the model. 

|DataResolution
|float
|0
|The size of the pixels in the model. 

|minimum_elevation
|float
|0
|If you have the `remove_seas` keyword set to true, the program will change any elevation node below this value to NoData.

|===



[cols="1,1,1,2", options="header"]
.Parameters if you load a raster from file. To do this, set `read_initial_raster: true`.
|===
|Keyword
|Input type
|Default value
|Description

|read_initial_raster
|bool
|false
|If true, reads an initial raster from file. The initial raster's directory and filename are determined by `read path` and `read fname`.

|minimum_elevation
|float
|0
|If you have the `remove_seas` keyword set to true, the program will change any elevation node below this value to NoData. 

|maximum_elevation
|float
|30000
|If you have the `remove_seas` keyword set to true, the program will change any elevation node above this value to NoData.

|remove_seas
|bool
|false
|If true, this changes extreme value in the elevation to NoData. This is quite useful when getting data from the internet because often the No Data values don't register. 

|min_slope_for_fill
|float
|0.001
|The minimum slope between pixels for use in the fill function. 


|print_raster_without_seas
|bool
|false
|If true, this overwrites the original raster with the new NoData values. 


|===

==== Parameters for controlling simple model output

[cols="1,1,1,2", options="header"]
.Simple model output
|===
|Keyword
|Input type
|Default value
|Description

|print_interval
|int
|10
|For most types of runs, the model will print rasters every `print_interval` timesteps. This is overridden if you `use_adaptive_timestep: true`. Then the print intervals will be based on model time. 

|write_hillshade
|bool
|false
|If true, prints a hillshade raster alongside an elevation raster.

|====


==== Parameters for creating an initial surface

We have a number of routines to modify the initial surface. They are applied in order and superimposed on each other. Diamond square surfaces are first, then parabolic surfaces, then roughening, then surface diffusion.

[cols="1,1,1,2", options="header"]
.Parameters for controlling the diamond square surface
|====
|Keyword
|Input type
|Default value
|Description
  
|use_diamond_square_initial
|bool
|true
|If true, uses the diamond square algorithm to create a fractal-like surface that is used as the starting condition. This is useful if you want to get complex, branching channel networks. 

|diamond_square_relief
|float
|16
|The total relief, in metres, of the surface generated by the diamond square algorithm. 

|diamond_square_feature_order
|int
|8
|This sets the size of the largest repeating features in the diamond square surface. It goes as the power of two, so if the feature order is 4, then the larges repeating feature will be 16 pixels wide.

|taper_edges
|bool
|true
|If true, this takes the original diamond square surface and tapers the edges to zero elevation using a linear scaling. 

|taper_rows
|int
|10
|The number of rows to taper along the edge of the DEM. Only has an effect if `taper_edges` is true.

|====

[cols="1,1,1,2", options="header"]
.Parameters for controlling the parabolic surface
|====
|Keyword
|Input type
|Default value
|Description
  
|superimpose_parabola
|bool
|true
|If true, a parabola in the N-S direction is imposed, with a peak in the middle of the DEM. The higher the relief of this parabola compared to the relief of the diamond square surface, the more linear your initial basins will be. 

|parabola_relief
|float
|6
|Relief of the superimposed parabolic surface in metres. 

|====

[cols="1,1,1,2", options="header"]
.Parameters for controlling roughening and diffusing the surface
|====
|Keyword
|Input type
|Default value
|Description
  
|roughen_surface
|bool
|true
|If true, roughen the surface with random noise. 

|fill_then_roughen_surface
|bool
|true
|If true, roughen the surface with random noise after filling. In many cases the diamond square algorithm leads to basins in the middle of the initial DEM, which are then filled. The surface roughenin ensures that subsequent channels in these basins are not all straight. 

|roughness_relief
|float
|0.26
|The amplitude of the roughness elements in metres. These are randomly selected from a uniform distribution and added to the elevation raster at each pixel.

|diffuse_initial_surface
|bool
|false
|If true, run a simple diffusion algorithm to smooth out any sharp discontinuities. This is useful if you have a high relief initial surface and use nonlinear hillslope diffusion immediately. It "diffuses" by simply taking a weighted mean of the pixel in quesiton (0.5 weighting) and the 4 nearest neighbors (0.5/4 weighting).

|diffuse_steps
|int
|5
|Numer of diffusion steps. Higher numbers mean a smoother landscape.

|====

[cols="1,1,1,2", options="header"]
.Parameter for printing the initial surface
|====
|Keyword
|Input type
|Default value
|Description


|print_initial_surface
|bool
|true
|If true, prints the intitial surface. The initial raster is given an integer key of `9999` that appears in the filename. 

|====

